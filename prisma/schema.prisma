datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model File {
  id              Int      @id @default(autoincrement())
  url             String
  mimetype        String
  size            Int
  created_at      DateTime @default(now()) @map("created_at")
  last_edited_at  DateTime @updatedAt @map("last_edited_at")
  car             Car?     @relation(fields: [car_id], references: [id])
  car_id          Int?

  @@map("file")
}


model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  password        String
  phone           String         @unique
  full_name       String
  avatar          String?
  role            Role
  created_at      DateTime       @default(now())
  last_edited_at  DateTime       @updatedAt
  companies       Company[]      @relation("CompanyOwner")
  transactions    Transaction[]

  @@map("user")
}



model Company {
  id              Int            @id @default(autoincrement())
  name            String
  owner           Int            @map("owner")
  logo            String
  created_at      DateTime       @default(now()) @map("created_at")
  last_edited_at  DateTime       @updatedAt @map("last_edited_at")
  ownerUser       User           @relation("CompanyOwner", fields: [owner], references: [id])
  models          Model[]
  cars            Car[]
  transactions    Transaction[]

  @@map("company")
}


model Model {
  id              Int       @id @default(autoincrement())
  name            String
  company_id      Int       @map("company_id")
  created_at      DateTime  @default(now()) @map("created_at")
  last_edited_at  DateTime  @updatedAt @map("last_edited_at")
  company         Company   @relation(fields: [company_id], references: [id])
  cars            Car[]

  @@map("model")
}


model Car {
  id              Int        @id @default(autoincrement())
  name            String
  model_id        Int        @map("model_id")
  company_id      Int        @map("company_id")
  info            String
  created_at      DateTime   @default(now()) @map("created_at")
  last_edited_at  DateTime   @updatedAt @map("last_edited_at")
  model           Model      @relation(fields: [model_id], references: [id])
  company         Company    @relation(fields: [company_id], references: [id])
  files           File[]
  transactions    Transaction[]

  @@map("car")
}

model Transaction {
  id              Int        @id @default(autoincrement())
  company_id      Int        @map("company_id")
  user_id         Int        @map("user_id")
  user_data       Json       @map("user_data")
  car_id          Int        @map("car_id")
  car_data        Json       @map("car_data")
  price           Float
  start_date      DateTime   @map("start_date")
  end_date        DateTime   @map("end_date")
  status          Status
  created_at      DateTime   @default(now()) @map("created_at")
  last_edited_at  DateTime   @updatedAt @map("last_edited_at")
  created_by      Int        @map("created_by")
  last_edited_by  Int        @map("last_edited_by")
  company         Company    @relation(fields: [company_id], references: [id])
  user            User       @relation(fields: [user_id], references: [id])
  car             Car        @relation(fields: [car_id], references: [id])

  @@map("transaction")
}


enum Role {
  client
  owner
  supervisor
  admin
}

enum Status {
  debit
  credit
}
